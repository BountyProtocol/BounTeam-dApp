/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface ISoulBondsInterface extends utils.Interface {
  contractName: "ISoulBonds";
  functions: {
    "relAdd(string,uint256)": FunctionFragment;
    "relGet(string)": FunctionFragment;
    "relGetAll(string)": FunctionFragment;
    "relGetAllOf(uint256,string)": FunctionFragment;
    "relGetIndex(string,uint256)": FunctionFragment;
    "relGetIndexOf(uint256,string,uint256)": FunctionFragment;
    "relGetOf(uint256,string)": FunctionFragment;
    "relRemove(string,uint256)": FunctionFragment;
    "relSet(string,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "relAdd",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "relGet", values: [string]): string;
  encodeFunctionData(functionFragment: "relGetAll", values: [string]): string;
  encodeFunctionData(
    functionFragment: "relGetAllOf",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "relGetIndex",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "relGetIndexOf",
    values: [BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "relGetOf",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "relRemove",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "relSet",
    values: [string, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "relAdd", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "relGet", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "relGetAll", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "relGetAllOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "relGetIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "relGetIndexOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "relGetOf", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "relRemove", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "relSet", data: BytesLike): Result;

  events: {
    "RelAdd(uint256,string,uint256)": EventFragment;
    "RelRemoved(uint256,string,uint256)": EventFragment;
    "RelSet(uint256,string,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "RelAdd"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RelRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RelSet"): EventFragment;
}

export type RelAddEvent = TypedEvent<
  [BigNumber, string, BigNumber],
  { fromSBT: BigNumber; key: string; toSBT: BigNumber }
>;

export type RelAddEventFilter = TypedEventFilter<RelAddEvent>;

export type RelRemovedEvent = TypedEvent<
  [BigNumber, string, BigNumber],
  { fromSBT: BigNumber; key: string; toSBT: BigNumber }
>;

export type RelRemovedEventFilter = TypedEventFilter<RelRemovedEvent>;

export type RelSetEvent = TypedEvent<
  [BigNumber, string, BigNumber],
  { fromSBT: BigNumber; key: string; toSBT: BigNumber }
>;

export type RelSetEventFilter = TypedEventFilter<RelSetEvent>;

export interface ISoulBonds extends BaseContract {
  contractName: "ISoulBonds";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ISoulBondsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    relAdd(
      key: string,
      toSBT: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    relGet(key: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    relGetAll(key: string, overrides?: CallOverrides): Promise<[BigNumber[]]>;

    relGetAllOf(
      fromSBT: BigNumberish,
      key: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    relGetIndex(
      key: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    relGetIndexOf(
      fromSBT: BigNumberish,
      key: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    relGetOf(
      fromSBT: BigNumberish,
      key: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    relRemove(
      key: string,
      toSBT: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    relSet(
      key: string,
      toSBT: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  relAdd(
    key: string,
    toSBT: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  relGet(key: string, overrides?: CallOverrides): Promise<BigNumber>;

  relGetAll(key: string, overrides?: CallOverrides): Promise<BigNumber[]>;

  relGetAllOf(
    fromSBT: BigNumberish,
    key: string,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  relGetIndex(
    key: string,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  relGetIndexOf(
    fromSBT: BigNumberish,
    key: string,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  relGetOf(
    fromSBT: BigNumberish,
    key: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  relRemove(
    key: string,
    toSBT: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  relSet(
    key: string,
    toSBT: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    relAdd(
      key: string,
      toSBT: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    relGet(key: string, overrides?: CallOverrides): Promise<BigNumber>;

    relGetAll(key: string, overrides?: CallOverrides): Promise<BigNumber[]>;

    relGetAllOf(
      fromSBT: BigNumberish,
      key: string,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    relGetIndex(
      key: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    relGetIndexOf(
      fromSBT: BigNumberish,
      key: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    relGetOf(
      fromSBT: BigNumberish,
      key: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    relRemove(
      key: string,
      toSBT: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    relSet(
      key: string,
      toSBT: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "RelAdd(uint256,string,uint256)"(
      fromSBT?: null,
      key?: null,
      toSBT?: null
    ): RelAddEventFilter;
    RelAdd(fromSBT?: null, key?: null, toSBT?: null): RelAddEventFilter;

    "RelRemoved(uint256,string,uint256)"(
      fromSBT?: null,
      key?: null,
      toSBT?: null
    ): RelRemovedEventFilter;
    RelRemoved(fromSBT?: null, key?: null, toSBT?: null): RelRemovedEventFilter;

    "RelSet(uint256,string,uint256)"(
      fromSBT?: null,
      key?: null,
      toSBT?: null
    ): RelSetEventFilter;
    RelSet(fromSBT?: null, key?: null, toSBT?: null): RelSetEventFilter;
  };

  estimateGas: {
    relAdd(
      key: string,
      toSBT: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    relGet(key: string, overrides?: CallOverrides): Promise<BigNumber>;

    relGetAll(key: string, overrides?: CallOverrides): Promise<BigNumber>;

    relGetAllOf(
      fromSBT: BigNumberish,
      key: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    relGetIndex(
      key: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    relGetIndexOf(
      fromSBT: BigNumberish,
      key: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    relGetOf(
      fromSBT: BigNumberish,
      key: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    relRemove(
      key: string,
      toSBT: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    relSet(
      key: string,
      toSBT: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    relAdd(
      key: string,
      toSBT: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    relGet(
      key: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    relGetAll(
      key: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    relGetAllOf(
      fromSBT: BigNumberish,
      key: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    relGetIndex(
      key: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    relGetIndexOf(
      fromSBT: BigNumberish,
      key: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    relGetOf(
      fromSBT: BigNumberish,
      key: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    relRemove(
      key: string,
      toSBT: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    relSet(
      key: string,
      toSBT: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
