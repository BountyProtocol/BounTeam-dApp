/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ActionExt,
  ActionExtInterface,
} from "../../../contracts/extensions/ActionExt";

const _abi = [
  {
    inputs: [],
    name: "getRepoAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hub",
    outputs: [
      {
        internalType: "contract IHub",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "actionGUID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "runActionData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "actionGUID",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "string",
            name: "role",
            type: "string",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
        ],
        internalType: "struct ActionExt.RoleMap[]",
        name: "roleMap",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "role",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct ActionExt.IntMap[]",
        name: "intMap",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "role",
            type: "string",
          },
          {
            internalType: "string",
            name: "value",
            type: "string",
          },
        ],
        internalType: "struct ActionExt.StrMap[]",
        name: "strMap",
        type: "tuple[]",
      },
    ],
    name: "runActionXX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "test",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506116be806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063205f34961461005c578063365a86fc146100715780639e92fd8e14610096578063e4bbfe231461009e578063f8a8fd6d146100b1575b600080fd5b61006f61006a366004610e37565b6100d8565b005b6100796103e8565b6040516001600160a01b0390911681526020015b60405180910390f35b6100796103f7565b61006f6100ac3660046110b6565b61045b565b6040805180820182526005815264574f524b5360d81b6020820152905161008d919061126f565b60006100e26108c3565b90506101236040518060400160405280601781526020017f2a2a205b5749505d20616374696f6e5265706f4164647200000000000000000081525082610944565b6001600160a01b038116156103e3576040516333f138f960e21b8152600481018490526001600160a01b0382169063cfc4e3e490602401600060405180830381865afa92505050801561019857506040513d6000823e601f3d908101601f1916820160405261019591908101906112da565b60015b6101f2576101a46113b3565b806308c379a0036101e657506101b86113cf565b806101c357506101e8565b8060405162461bcd60e51b81526004016101dd919061126f565b60405180910390fd5b505b3d6000803e3d6000fd5b610230604051806040016040528060138152602001721515102daba4a82e9020b1ba34b7b7102a162b60691b8152508260600151836020015161098d565b61025a8160600151604051806040016040528060048152602001631cdbdd5b60e21b8152506109d4565b156103e1576102898160200151604051806040016040528060048152602001637261746560e01b8152506109d4565b156103e1576000610298610a2e565b90506102d96040518060400160405280601e81526020017f2a2a205b5749505d20616374696f6e20746172676574436f6e7472616374000081525082610944565b6000806000868060200190518101906102f29190611459565b9250925092506103386040518060400160405280601e81526020017f2a2a205b5749505d20616374696f6e206465636f64656420706172616d7300008152508484610a93565b610340610a2e565b6001600160a01b031663d7ebe87d858585856040518563ffffffff1660e01b815260040161037194939291906114a9565b600060405180830381600087803b15801561038b57600080fd5b505af192505050801561039c575060015b6103a8576101a46113b3565b6103dc6040518060400160405280601181526020017016d5d254174814995c0810da185b99d959607a1b8152508585610ada565b505050505b505b505050565b60006103f2610b21565b905090565b6000306001600160a01b0316639e92fd8e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610437573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f291906114e1565b6104996040518060400160405280601881526020017f2a2a2072756e416374696f6e5858282920535441525445440000000000000000815250610b61565b60006104a36108c3565b90506104d86040518060400160405280601181526020017015151030b1ba34b7b72932b837a0b2323960791b81525082610944565b6001600160a01b038116156108bc576040516333f138f960e21b8152600481018690526000906001600160a01b0383169063cfc4e3e490602401600060405180830381865afa15801561052f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261055791908101906112da565b905061058381606001516040518060400160405280600481526020016367616d6560e01b8152506109d4565b6108ba576105b0816060015160405180604001604052806003815260200162343ab160e91b8152506109d4565b6108ba576105de8160600151604051806040016040528060048152602001631cdbdd5b60e21b8152506109d4565b156108ba5761060d8160200151604051806040016040528060048152602001637261746560e01b8152506109d4565b156108ba57600061061c610a2e565b905061065d6040518060400160405280601881526020017f2a2a20616374696f6e20746172676574436f6e7472616374000000000000000081525082610944565b6000610687604051806040016040528060068152602001651bd89a9958dd60d21b81525087610ba7565b90506106c86040518060400160405280601d81526020017f616374696f6e206f626a6563742028746172676574546f6b656e49642900000081525082610c20565b60006106f2604051806040016040528060068152602001653237b6b0b4b760d11b81525087610c65565b90506107236040518060400160405280600d81526020016c30b1ba34b7b7103237b6b0b4b760991b81525082610cc7565b6000610750604051806040016040528060098152602001683234b932b1ba34b7b760b91b81525088610c65565b90506107846040518060400160405280601081526020016f30b1ba34b7b7103234b932b1ba34b7b760811b81525082610cc7565b60006107ad6040518060400160405280600581526020016476616c756560d81b8152508a610ba7565b90506107de6040518060400160405280600d81526020016c1858dd1a5bdb88185b5bdd5b9d609a1b81525082610c20565b600061080a83604051806040016040528060088152602001676e6567617469766560c01b8152506109d4565b1561081f5761081882611514565b9050610822565b50805b61082a610a2e565b6001600160a01b031663d7ebe87d878787856040518563ffffffff1660e01b815260040161085b94939291906114a9565b600060405180830381600087803b15801561087557600080fd5b505af1925050508015610886575060015b6108b3576108926113b3565b806308c379a0036101e657506108a66113cf565b806108b157506101e8565b505b5050505050505b505b5050505050565b60006108cd610d0c565b6001600160a01b031663e2b49cb96108e3610b21565b604080516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152600660448201526530b1ba34b7b760d11b60648201526084015b602060405180830381865afa158015610437573d6000803e3d6000fd5b610989828260405160240161095a929190611530565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610d16565b5050565b6103e38383836040516024016109a59392919061155a565b60408051601f198184030181529190526020810180516001600160e01b0316632ced7cef60e01b179052610d16565b6000816040516020016109e7919061159d565b6040516020818303038152906040528051906020012083604051602001610a0e919061159d565b604051602081830303815290604052805190602001201490505b92915050565b6000610a38610d0c565b6001600160a01b031663e2b49cb9610a4e610b21565b604080516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152600360448201526214d09560ea1b6064820152608401610927565b6103e3838383604051602401610aab939291906115b9565b60408051601f198184030181529190526020810180516001600160e01b0316635970e08960e01b179052610d16565b6103e3838383604051602401610af2939291906115e4565b60408051601f198184030181529190526020810180516001600160e01b0316630d26b92560e01b179052610d16565b6000306001600160a01b0316632db9a5126040518163ffffffff1660e01b8152600401602060405180830381865afa158015610437573d6000803e3d6000fd5b610ba481604051602401610b75919061126f565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610d16565b50565b6000805b8251811015610c1657610bdb84848381518110610bca57610bca611612565b6020026020010151600001516109d4565b15610c0657828181518110610bf257610bf2611612565b602002602001015160200151915050610a28565b610c0f81611628565b9050610bab565b5060009392505050565b6109898282604051602401610c36929190611641565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610d16565b606060005b8251811015610cb057610c8984848381518110610bca57610bca611612565b15610ca057828181518110610bf257610bf2611612565b610ca981611628565b9050610c6a565b505060408051602081019091526000815292915050565b6109898282604051602401610cdd929190611663565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b179052610d16565b60006103f26103f7565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b634e487b7160e01b600052604160045260246000fd5b6040810181811067ffffffffffffffff82111715610d6d57610d6d610d37565b60405250565b601f8201601f1916810167ffffffffffffffff81118282101715610d9957610d99610d37565b6040525050565b6040516080810167ffffffffffffffff81118282101715610dc357610dc3610d37565b60405290565b600067ffffffffffffffff821115610de357610de3610d37565b50601f01601f191660200190565b6000610dfc83610dc9565b604051610e098282610d73565b809250848152858585011115610e1e57600080fd5b8484602083013760006020868301015250509392505050565b60008060408385031215610e4a57600080fd5b82359150602083013567ffffffffffffffff811115610e6857600080fd5b8301601f81018513610e7957600080fd5b610e8885823560208401610df1565b9150509250929050565b600067ffffffffffffffff821115610eac57610eac610d37565b5060051b60200190565b600082601f830112610ec757600080fd5b610ed683833560208501610df1565b9392505050565b6001600160a01b0381168114610ba457600080fd5b600082601f830112610f0357600080fd5b81356020610f1082610e92565b60408051610f1e8382610d73565b84815260059490941b8601830193838101925087851115610f3e57600080fd5b8387015b85811015610fbf57803567ffffffffffffffff80821115610f635760008081fd5b90890190818b03601f1901851315610f7b5760008081fd5b8451610f8681610d4d565b8783013582811115610f985760008081fd5b610fa68d8a83870101610eb6565b8252509185013587830152508452928401928401610f42565b50979650505050505050565b600082601f830112610fdc57600080fd5b81356020610fe982610e92565b60408051610ff78382610d73565b84815260059490941b860183019383810192508785111561101757600080fd5b8387015b85811015610fbf57803567ffffffffffffffff8082111561103c5760008081fd5b90890190818b03601f19018513156110545760008081fd5b845161105f81610d4d565b87830135828111156110715760008081fd5b61107f8d8a83870101610eb6565b82525085830135828111156110945760008081fd5b6110a28d8a83870101610eb6565b828a0152508652505092840192840161101b565b600080600080608085870312156110cc57600080fd5b84359350602085013567ffffffffffffffff808211156110eb57600080fd5b818701915087601f8301126110ff57600080fd5b813561110a81610e92565b6040516111178282610d73565b80915082815260208101915060208360051b86010192508a83111561113b57600080fd5b602085015b838110156111c357848135111561115657600080fd5b803586016040818e03601f1901121561116e57600080fd5b60405161117a81610d4d565b60208201358781111561118c57600080fd5b61119b8f602083860101610eb6565b825250604082013591506111ae82610edd565b60208181019290925284529283019201611140565b509650505060408701359150808211156111dc57600080fd5b6111e888838901610ef2565b935060608701359150808211156111fe57600080fd5b5061120b87828801610fcb565b91505092959194509250565b60005b8381101561123257818101518382015260200161121a565b838111156103e15750506000910152565b6000815180845261125b816020860160208601611217565b601f01601f19169290920160200192915050565b602081526000610ed66020830184611243565b600082601f83011261129357600080fd5b815161129e81610dc9565b6040516112ab8282610d73565b8281528560208487010111156112c057600080fd5b6112d1836020830160208801611217565b95945050505050565b6000602082840312156112ec57600080fd5b815167ffffffffffffffff8082111561130457600080fd5b908301906080828603121561131857600080fd5b611320610da0565b82518281111561132f57600080fd5b61133b87828601611282565b82525060208301518281111561135057600080fd5b61135c87828601611282565b60208301525060408301518281111561137457600080fd5b61138087828601611282565b60408301525060608301518281111561139857600080fd5b6113a487828601611282565b60608301525095945050505050565b600060033d11156113cc5760046000803e5060005160e01c5b90565b600060443d10156113dd5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561140d57505050505090565b82850191508151818111156114255750505050505090565b843d870101602082850101111561143f5750505050505090565b61144e60208286010187610d73565b509095945050505050565b60008060006060848603121561146e57600080fd5b83519250602084015167ffffffffffffffff81111561148c57600080fd5b61149886828701611282565b925050604084015190509250925092565b60018060a01b03851681528360208201526080604082015260006114d06080830185611243565b905082606083015295945050505050565b6000602082840312156114f357600080fd5b8151610ed681610edd565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b8201611529576115296114fe565b5060000390565b6040815260006115436040830185611243565b905060018060a01b03831660208301529392505050565b60608152600061156d6060830186611243565b828103602084015261157f8186611243565b905082810360408401526115938185611243565b9695505050505050565b600082516115af818460208701611217565b9190910192915050565b6060815260006115cc6060830186611243565b84602084015282810360408401526115938185611243565b6060815260006115f76060830186611243565b6001600160a01b039490941660208301525060400152919050565b634e487b7160e01b600052603260045260246000fd5b60006001820161163a5761163a6114fe565b5060010190565b6040815260006116546040830185611243565b90508260208301529392505050565b6040815260006116766040830185611243565b82810360208401526112d1818561124356fea2646970667358221220e8d881a8e578de550a461dc38505fb804cb733bcf180062863cb533ae0b415c764736f6c634300080e0033";

type ActionExtConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ActionExtConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ActionExt__factory extends ContractFactory {
  constructor(...args: ActionExtConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ActionExt> {
    return super.deploy(overrides || {}) as Promise<ActionExt>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ActionExt {
    return super.attach(address) as ActionExt;
  }
  override connect(signer: Signer): ActionExt__factory {
    return super.connect(signer) as ActionExt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ActionExtInterface {
    return new utils.Interface(_abi) as ActionExtInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ActionExt {
    return new Contract(address, _abi, signerOrProvider) as ActionExt;
  }
}
