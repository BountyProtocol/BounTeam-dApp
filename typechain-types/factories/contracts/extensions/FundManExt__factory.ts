/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FundManExt,
  FundManExtInterface,
} from "../../../contracts/extensions/FundManExt";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "FundsSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "contractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRepoAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hub",
    outputs: [
      {
        internalType: "contract IHub",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendFundsERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061097d806100206000396000f3fe60806040526004361061004e5760003560e01c8063365a86fc146100925780636f64234e146100c45780638eea7fe9146100e65780639e92fd8e14610106578063c53b77021461011b57600080fd5b3661008d57604080513381523460208201527f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be770910160405180910390a1005b600080fd5b34801561009e57600080fd5b506100a7610149565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d057600080fd5b506100e46100df3660046107ae565b610158565b005b3480156100f257600080fd5b506100e46101013660046107da565b610208565b34801561011257600080fd5b506100a76102b5565b34801561012757600080fd5b5061013b61013636600461081b565b610319565b6040519081526020016100bb565b60006101536103a0565b905090565b60405163dae4a17f60e01b8152309063dae4a17f9061017b90339060040161083f565b602060405180830381865afa158015610198573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bc9190610870565b6101fa5760405162461bcd60e51b815260206004820152600a60248201526941444d494e5f4f4e4c5960b01b60448201526064015b60405180910390fd5b61020482826103e0565b5050565b60405163dae4a17f60e01b8152309063dae4a17f9061022b90339060040161083f565b602060405180830381865afa158015610248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026c9190610870565b6102a55760405162461bcd60e51b815260206004820152600a60248201526941444d494e5f4f4e4c5960b01b60448201526064016101f1565b6102b08383836104f9565b505050565b6000306001600160a01b0316639e92fd8e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101539190610892565b60006001600160a01b0382168103610332575047919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610376573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039a91906108af565b92915050565b6000306001600160a01b0316632db9a5126040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102f5573d6000803e3d6000fd5b804710156104305760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016101f1565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461047d576040519150601f19603f3d011682016040523d82523d6000602084013e610482565b606091505b50509050806102b05760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016101f1565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526102b092869291600091610589918516908490610606565b8051909150156102b057808060200190518101906105a79190610870565b6102b05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101f1565b6060610615848460008561061d565b949350505050565b60608247101561067e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101f1565b600080866001600160a01b0316858760405161069a91906108f8565b60006040518083038185875af1925050503d80600081146106d7576040519150601f19603f3d011682016040523d82523d6000602084013e6106dc565b606091505b50915091506106ed878383876106f8565b979650505050505050565b60608315610767578251600003610760576001600160a01b0385163b6107605760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101f1565b5081610615565b610615838381511561077c5781518083602001fd5b8060405162461bcd60e51b81526004016101f19190610914565b6001600160a01b03811681146107ab57600080fd5b50565b600080604083850312156107c157600080fd5b82356107cc81610796565b946020939093013593505050565b6000806000606084860312156107ef57600080fd5b83356107fa81610796565b9250602084013561080a81610796565b929592945050506040919091013590565b60006020828403121561082d57600080fd5b813561083881610796565b9392505050565b6001600160a01b039190911681526040602082018190526005908201526430b236b4b760d91b606082015260800190565b60006020828403121561088257600080fd5b8151801515811461083857600080fd5b6000602082840312156108a457600080fd5b815161083881610796565b6000602082840312156108c157600080fd5b5051919050565b60005b838110156108e35781810151838201526020016108cb565b838111156108f2576000848401525b50505050565b6000825161090a8184602087016108c8565b9190910192915050565b60208152600082518060208401526109338160408501602087016108c8565b601f01601f1916919091016040019291505056fea2646970667358221220f133ed6e88da99a5e78cd784bb4acddb91d98046557d0ab694a9bdda938393a064736f6c634300080e0033";

type FundManExtConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundManExtConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundManExt__factory extends ContractFactory {
  constructor(...args: FundManExtConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundManExt> {
    return super.deploy(overrides || {}) as Promise<FundManExt>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FundManExt {
    return super.attach(address) as FundManExt;
  }
  override connect(signer: Signer): FundManExt__factory {
    return super.connect(signer) as FundManExt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundManExtInterface {
    return new utils.Interface(_abi) as FundManExtInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FundManExt {
    return new Contract(address, _abi, signerOrProvider) as FundManExt;
  }
}
