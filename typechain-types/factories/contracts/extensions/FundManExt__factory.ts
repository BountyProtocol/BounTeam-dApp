/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FundManExt,
  FundManExtInterface,
} from "../../../contracts/extensions/FundManExt";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "FundsSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "contractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRepoAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hub",
    outputs: [
      {
        internalType: "contract IHub",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendFundsERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506109c4806100206000396000f3fe60806040526004361061004e5760003560e01c8063365a86fc146100935780636f64234e146100be5780638eea7fe9146100e05780639e92fd8e14610100578063c53b77021461011557600080fd5b3661008e577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77033346040516100849291906108d6565b60405180910390a1005b600080fd5b34801561009f57600080fd5b506100a8610143565b6040516100b59190610891565b60405180910390f35b3480156100ca57600080fd5b506100de6100d93660046107d2565b610152565b005b3480156100ec57600080fd5b506100de6100fb3660046107fd565b6101f8565b34801561010c57600080fd5b506100a8610297565b34801561012157600080fd5b5061013561013036600461079a565b61030a565b6040519081526020016100b5565b600061014d6103a3565b905090565b60405163dae4a17f60e01b8152309063dae4a17f906101759033906004016108a5565b60206040518083038186803b15801561018d57600080fd5b505afa1580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c5919061083d565b6101ea5760405162461bcd60e51b81526004016101e190610922565b60405180910390fd5b6101f482826103de565b5050565b60405163dae4a17f60e01b8152309063dae4a17f9061021b9033906004016108a5565b60206040518083038186803b15801561023357600080fd5b505afa158015610247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026b919061083d565b6102875760405162461bcd60e51b81526004016101e190610922565b6102928383836104f4565b505050565b6000306001600160a01b0316639e92fd8e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102d257600080fd5b505afa1580156102e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014d91906107b6565b60006001600160a01b038216610321575047919050565b6040516370a0823160e01b81526001600160a01b038316906370a082319061034d903090600401610891565b60206040518083038186803b15801561036557600080fd5b505afa158015610379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039d919061085d565b92915050565b6000306001600160a01b0316632db9a5126040518163ffffffff1660e01b815260040160206040518083038186803b1580156102d257600080fd5b8047101561042e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016101e1565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461047b576040519150601f19603f3d011682016040523d82523d6000602084013e610480565b606091505b50509050806102925760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c20726044820152791958da5c1a595b9d081b585e481a185d99481c995d995c9d195960321b60648201526084016101e1565b6102928363a9059cbb60e01b84846040516024016105139291906108d6565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152600061059a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106179092919063ffffffff16565b80519091501561029257808060200190518101906105b8919061083d565b6102925760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101e1565b60606106268484600085610630565b90505b9392505050565b6060824710156106915760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101e1565b6001600160a01b0385163b6106e85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101e1565b600080866001600160a01b031685876040516107049190610875565b60006040518083038185875af1925050503d8060008114610741576040519150601f19603f3d011682016040523d82523d6000602084013e610746565b606091505b5091509150610756828286610761565b979650505050505050565b60608315610770575081610629565b8251156107805782518084602001fd5b8160405162461bcd60e51b81526004016101e191906108ef565b6000602082840312156107ab578081fd5b813561062981610976565b6000602082840312156107c7578081fd5b815161062981610976565b600080604083850312156107e4578081fd5b82356107ef81610976565b946020939093013593505050565b600080600060608486031215610811578081fd5b833561081c81610976565b9250602084013561082c81610976565b929592945050506040919091013590565b60006020828403121561084e578081fd5b81518015158114610629578182fd5b60006020828403121561086e578081fd5b5051919050565b60008251610887818460208701610946565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039190911681526040602082018190526005908201526430b236b4b760d91b606082015260800190565b6001600160a01b03929092168252602082015260400190565b602081526000825180602084015261090e816040850160208701610946565b601f01601f19169190910160400192915050565b6020808252600a908201526941444d494e5f4f4e4c5960b01b604082015260600190565b60005b83811015610961578181015183820152602001610949565b83811115610970576000848401525b50505050565b6001600160a01b038116811461098b57600080fd5b5056fea2646970667358221220b74db2e512e8257ab43747e59a1b36e85429e6fdd680089aeec3888dfae0526a64736f6c63430008040033";

type FundManExtConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundManExtConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundManExt__factory extends ContractFactory {
  constructor(...args: FundManExtConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundManExt> {
    return super.deploy(overrides || {}) as Promise<FundManExt>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FundManExt {
    return super.attach(address) as FundManExt;
  }
  override connect(signer: Signer): FundManExt__factory {
    return super.connect(signer) as FundManExt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundManExtInterface {
    return new utils.Interface(_abi) as FundManExtInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FundManExt {
    return new Contract(address, _abi, signerOrProvider) as FundManExt;
  }
}
