/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MicroDAOExt,
  MicroDAOExtInterface,
} from "../../../contracts/extensions/MicroDAOExt";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "taskAddr",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "applyToTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "taskAddr",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "deliverTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRepoAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hub",
    outputs: [
      {
        internalType: "contract IHub",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506106e3806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630da1ab7714610051578063365a86fc146100665780638ca037a8146100845780639e92fd8e14610097575b600080fd5b61006461005f366004610481565b61009f565b005b61006e610224565b60405161007b91906105c2565b60405180910390f35b610064610092366004610481565b610233565b61006e610324565b60405163dae4a17f60e01b8152309063dae4a17f906100c29033906004016105d6565b60206040518083038186803b1580156100da57600080fd5b505afa1580156100ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610112919061053f565b6101375760405162461bcd60e51b815260040161012e9061065b565b60405180910390fd5b6000610141610397565b6001600160a01b031663724686d7306040518263ffffffff1660e01b815260040161016c91906105c2565b60206040518083038186803b15801561018457600080fd5b505afa158015610198573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bc919061055f565b6040516323fba0b960e11b81529091506001600160a01b038416906347f74172906101ed908490869060040161061a565b600060405180830381600087803b15801561020757600080fd5b505af115801561021b573d6000803e3d6000fd5b50505050505050565b600061022e6103a1565b905090565b60405163dae4a17f60e01b8152309063dae4a17f906102569033906004016105d6565b60206040518083038186803b15801561026e57600080fd5b505afa158015610282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a6919061053f565b6102c25760405162461bcd60e51b815260040161012e9061065b565b604051630c8b956560e41b81526001600160a01b0383169063c8b95650906102ee908490600401610607565b600060405180830381600087803b15801561030857600080fd5b505af115801561031c573d6000803e3d6000fd5b505050505050565b6000306001600160a01b0316639e92fd8e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561035f57600080fd5b505afa158015610373573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022e919061045e565b600061022e6103dc565b6000306001600160a01b0316632db9a5126040518163ffffffff1660e01b815260040160206040518083038186803b15801561035f57600080fd5b60006103e6610454565b6001600160a01b031663e2b49cb96103fc6103a1565b604080516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152600360448201526214d09560ea1b606482015260840160206040518083038186803b15801561035f57600080fd5b600061022e610324565b60006020828403121561046f578081fd5b815161047a81610695565b9392505050565b60008060408385031215610493578081fd5b823561049e81610695565b915060208301356001600160401b03808211156104b9578283fd5b818501915085601f8301126104cc578283fd5b8135818111156104de576104de61067f565b604051601f8201601f19908116603f011681019083821181831017156105065761050661067f565b8160405282815288602084870101111561051e578586fd5b82602086016020830137856020848301015280955050505050509250929050565b600060208284031215610550578081fd5b8151801515811461047a578182fd5b600060208284031215610570578081fd5b5051919050565b60008151808452815b8181101561059c57602081850181015186830182015201610580565b818111156105ad5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039190911681526040602082018190526005908201526430b236b4b760d91b606082015260800190565b60208152600061047a6020830184610577565b606081526009606082015268185c1c1b1a58d85b9d60ba1b608082015282602082015260a06040820152600061065360a0830184610577565b949350505050565b6020808252600a908201526941444d494e5f4f4e4c5960b01b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146106aa57600080fd5b5056fea2646970667358221220d9df539f9fd20b9149ecae2fdc5d0db1b1e2e3ac58abbc1aeb3f01acd71e6c7764736f6c63430008040033";

type MicroDAOExtConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MicroDAOExtConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MicroDAOExt__factory extends ContractFactory {
  constructor(...args: MicroDAOExtConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MicroDAOExt> {
    return super.deploy(overrides || {}) as Promise<MicroDAOExt>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MicroDAOExt {
    return super.attach(address) as MicroDAOExt;
  }
  override connect(signer: Signer): MicroDAOExt__factory {
    return super.connect(signer) as MicroDAOExt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MicroDAOExtInterface {
    return new utils.Interface(_abi) as MicroDAOExtInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MicroDAOExt {
    return new Contract(address, _abi, signerOrProvider) as MicroDAOExt;
  }
}
