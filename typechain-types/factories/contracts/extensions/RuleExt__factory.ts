/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RuleExt,
  RuleExtInterface,
} from "../../../contracts/extensions/RuleExt";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "confirmationGet",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "ruling",
            type: "string",
          },
          {
            internalType: "bool",
            name: "evidence",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "witness",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.Confirmation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "effectsGet",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "domain",
            type: "string",
          },
          {
            internalType: "int256",
            name: "value",
            type: "int256",
          },
          {
            internalType: "bool",
            name: "disabled",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.RepChange[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRepoAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hub",
    outputs: [
      {
        internalType: "contract IHub",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "about",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "affected",
            type: "string",
          },
          {
            internalType: "bool",
            name: "negation",
            type: "bool",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bool",
            name: "disabled",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.Rule",
        name: "rule",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "ruling",
            type: "string",
          },
          {
            internalType: "bool",
            name: "evidence",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "witness",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.Confirmation",
        name: "confirmation",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "domain",
            type: "string",
          },
          {
            internalType: "int256",
            name: "value",
            type: "int256",
          },
          {
            internalType: "bool",
            name: "disabled",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.RepChange[]",
        name: "effects",
        type: "tuple[]",
      },
    ],
    name: "ruleAdd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "disabled",
        type: "bool",
      },
    ],
    name: "ruleDisable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ruleGet",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "about",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "affected",
            type: "string",
          },
          {
            internalType: "bool",
            name: "negation",
            type: "bool",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bool",
            name: "disabled",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.Rule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "about",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "affected",
            type: "string",
          },
          {
            internalType: "bool",
            name: "negation",
            type: "bool",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bool",
            name: "disabled",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.Rule",
        name: "rule",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "domain",
            type: "string",
          },
          {
            internalType: "int256",
            name: "value",
            type: "int256",
          },
          {
            internalType: "bool",
            name: "disabled",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.RepChange[]",
        name: "effects",
        type: "tuple[]",
      },
    ],
    name: "ruleUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "ruling",
            type: "string",
          },
          {
            internalType: "bool",
            name: "evidence",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "witness",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.Confirmation",
        name: "confirmation",
        type: "tuple",
      },
    ],
    name: "ruleUpdateConfirmation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061128c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806382f5a5411161006657806382f5a54114610113578063980b6fd2146101335780639e92fd8e14610146578063a93b5fa71461014e578063e682631b1461016e57600080fd5b8063365a86fc1461009857806339088b46146100bd5780633dda390c146100d25780636e58f657146100f3575b600080fd5b6100a0610181565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d06100cb366004610b16565b610190565b005b6100e56100e0366004610be8565b610287565b6040519081526020016100b4565b610106610101366004610c42565b61038c565b6040516100b49190610d14565b610126610121366004610c42565b610439565b6040516100b49190610da5565b6100d0610141366004610db8565b6104b5565b6100a06105a6565b61016161015c366004610c42565b61060a565b6040516100b49190610e1f565b6100d061017c366004610e32565b6106aa565b600061018b61075f565b905090565b60405163dae4a17f60e01b8152309063dae4a17f906101b3903390600401610e78565b602060405180830381865afa1580156101d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f49190610eb9565b6102195760405162461bcd60e51b815260040161021090610ed6565b60405180910390fd5b61022161079f565b6001600160a01b03166339088b468484846040518463ffffffff1660e01b815260040161025093929190610efa565b600060405180830381600087803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b50505050505050565b60405163dae4a17f60e01b8152600090309063dae4a17f906102ad903390600401610e78565b602060405180830381865afa1580156102ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ee9190610eb9565b61030a5760405162461bcd60e51b815260040161021090610ed6565b61031261079f565b6001600160a01b0316633dda390c8585856040518463ffffffff1660e01b815260040161034193929190610f2f565b6020604051808303816000875af1158015610360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103849190610f68565b949350505050565b6040805160a08101825260008082526060602083018190529282018190528282019290925260808101919091526103c161079f565b6001600160a01b0316636e58f657836040518263ffffffff1660e01b81526004016103ee91815260200190565b600060405180830381865afa15801561040b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104339190810190610fc6565b92915050565b606061044361079f565b6001600160a01b03166382f5a541836040518263ffffffff1660e01b815260040161047091815260200190565b600060405180830381865afa15801561048d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104339190810190611082565b60405163dae4a17f60e01b8152309063dae4a17f906104d8903390600401610e78565b602060405180830381865afa1580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105199190610eb9565b6105355760405162461bcd60e51b815260040161021090610ed6565b61053d61079f565b604051634c05b7e960e11b81526004810184905282151560248201526001600160a01b03919091169063980b6fd2906044015b600060405180830381600087803b15801561058a57600080fd5b505af115801561059e573d6000803e3d6000fd5b505050505050565b6000306001600160a01b0316639e92fd8e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018b9190611185565b610630604051806060016040528060608152602001600015158152602001600081525090565b61063861079f565b6001600160a01b031663a93b5fa7836040518263ffffffff1660e01b815260040161066591815260200190565b600060405180830381865afa158015610682573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261043391908101906111ae565b60405163dae4a17f60e01b8152309063dae4a17f906106cd903390600401610e78565b602060405180830381865afa1580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e9190610eb9565b61072a5760405162461bcd60e51b815260040161021090610ed6565b61073261079f565b6001600160a01b031663e682631b83836040518363ffffffff1660e01b815260040161057092919061123d565b6000306001600160a01b0316632db9a5126040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105e6573d6000803e3d6000fd5b6000806107aa610847565b6001600160a01b031663e2b49cb96107c061075f565b604080516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152600960448201526852554c455f5245504f60b81b6064820152608401602060405180830381865afa158015610823573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104339190611185565b600061018b6105a6565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171561088957610889610851565b60405290565b604051606081016001600160401b038111828210171561088957610889610851565b604051601f8201601f191681016001600160401b03811182821017156108d9576108d9610851565b604052919050565b60006001600160401b038211156108fa576108fa610851565b50601f01601f191660200190565b600082601f83011261091957600080fd5b813561092c610927826108e1565b6108b1565b81815284602083860101111561094157600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461096c57600080fd5b50565b600060a0828403121561098157600080fd5b610989610867565b90508135815260208201356001600160401b03808211156109a957600080fd5b6109b585838601610908565b6020840152604084013591506109ca8261095e565b81604084015260608401359150808211156109e457600080fd5b506109f184828501610908565b6060830152506080820135610a058161095e565b608082015292915050565b60006001600160401b03821115610a2957610a29610851565b5060051b60200190565b600082601f830112610a4457600080fd5b81356020610a5461092783610a10565b82815260059290921b84018101918181019086841115610a7357600080fd5b8286015b84811015610b0b5780356001600160401b0380821115610a975760008081fd5b908801906060828b03601f1901811315610ab15760008081fd5b610ab961088f565b8784013583811115610acb5760008081fd5b610ad98d8a83880101610908565b8252506040848101358983015293820135939250610af68461095e565b91820192909252845250918301918301610a77565b509695505050505050565b600080600060608486031215610b2b57600080fd5b8335925060208401356001600160401b0380821115610b4957600080fd5b610b558783880161096f565b93506040860135915080821115610b6b57600080fd5b50610b7886828701610a33565b9150509250925092565b600060608284031215610b9457600080fd5b610b9c61088f565b905081356001600160401b03811115610bb457600080fd5b610bc084828501610908565b8252506020820135610bd18161095e565b806020830152506040820135604082015292915050565b600080600060608486031215610bfd57600080fd5b83356001600160401b0380821115610c1457600080fd5b610c208783880161096f565b94506020860135915080821115610c3657600080fd5b610b5587838801610b82565b600060208284031215610c5457600080fd5b5035919050565b60005b83811015610c76578181015183820152602001610c5e565b83811115610c85576000848401525b50505050565b60008151808452610ca3816020860160208601610c5b565b601f01601f19169290920160200192915050565b805182526000602082015160a06020850152610cd660a0850182610c8b565b905060408301511515604085015260608301518482036060860152610cfb8282610c8b565b9150506080830151151560808501528091505092915050565b602081526000610d276020830184610cb7565b9392505050565b600081518084526020808501808196508360051b8101915082860160005b85811015610d98578284038952815160608151818752610d6e82880182610c8b565b83890151888a01526040938401511515939097019290925250509784019790840190600101610d4c565b5091979650505050505050565b602081526000610d276020830184610d2e565b60008060408385031215610dcb57600080fd5b823591506020830135610ddd8161095e565b809150509250929050565b6000815160608452610dfd6060850182610c8b565b9050602083015115156020850152604083015160408501528091505092915050565b602081526000610d276020830184610de8565b60008060408385031215610e4557600080fd5b8235915060208301356001600160401b03811115610e6257600080fd5b610e6e85828601610b82565b9150509250929050565b6001600160a01b039190911681526040602082018190526005908201526430b236b4b760d91b606082015260800190565b8051610eb48161095e565b919050565b600060208284031215610ecb57600080fd5b8151610d278161095e565b6020808252600a908201526941646d696e204f6e6c7960b01b604082015260600190565b838152606060208201526000610f136060830185610cb7565b8281036040840152610f258185610d2e565b9695505050505050565b606081526000610f426060830186610cb7565b8281036020840152610f548186610de8565b90508281036040840152610f258185610d2e565b600060208284031215610f7a57600080fd5b5051919050565b600082601f830112610f9257600080fd5b8151610fa0610927826108e1565b818152846020838601011115610fb557600080fd5b610384826020830160208701610c5b565b600060208284031215610fd857600080fd5b81516001600160401b0380821115610fef57600080fd5b9083019060a0828603121561100357600080fd5b61100b610867565b8251815260208301518281111561102157600080fd5b61102d87828601610f81565b60208301525061103f60408401610ea9565b604082015260608301518281111561105657600080fd5b61106287828601610f81565b60608301525061107460808401610ea9565b608082015295945050505050565b6000602080838503121561109557600080fd5b82516001600160401b03808211156110ac57600080fd5b818501915085601f8301126110c057600080fd5b81516110ce61092782610a10565b81815260059190911b830184019084810190888311156110ed57600080fd5b8585015b83811015611178578051858111156111095760008081fd5b86016060818c03601f19018113156111215760008081fd5b61112961088f565b898301518881111561113b5760008081fd5b6111498e8c83870101610f81565b8252506040838101518b83015292820151926111648461095e565b8101929092525083529186019186016110f1565b5098975050505050505050565b60006020828403121561119757600080fd5b81516001600160a01b0381168114610d2757600080fd5b6000602082840312156111c057600080fd5b81516001600160401b03808211156111d757600080fd5b90830190606082860312156111eb57600080fd5b6111f361088f565b82518281111561120257600080fd5b61120e87828601610f81565b825250602083015191506112218261095e565b8160208201526040830151604082015280935050505092915050565b8281526040602082015260006103846040830184610de856fea2646970667358221220c0c20c1856de78429a0ef0af463d97d4fa7ee82c0b4e5e8617e0abcc2cd4383464736f6c634300080e0033";

type RuleExtConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RuleExtConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RuleExt__factory extends ContractFactory {
  constructor(...args: RuleExtConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RuleExt> {
    return super.deploy(overrides || {}) as Promise<RuleExt>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RuleExt {
    return super.attach(address) as RuleExt;
  }
  override connect(signer: Signer): RuleExt__factory {
    return super.connect(signer) as RuleExt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RuleExtInterface {
    return new utils.Interface(_abi) as RuleExtInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RuleExt {
    return new Contract(address, _abi, signerOrProvider) as RuleExt;
  }
}
