/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CourtExt,
  CourtExtInterface,
} from "../../../contracts/extensions/CourtExt";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "game",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "ruleId",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.RuleRef[]",
        name: "rules",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "role",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.InputRoleToken[]",
        name: "assignRoles",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "entRole",
            type: "string",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.PostInput[]",
        name: "posts",
        type: "tuple[]",
      },
    ],
    name: "caseMake",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "game",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "ruleId",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.RuleRef[]",
        name: "rules",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "role",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.InputRoleToken[]",
        name: "assignRoles",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "entRole",
            type: "string",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.PostInput[]",
        name: "posts",
        type: "tuple[]",
      },
      {
        internalType: "string",
        name: "decisionURI_",
        type: "string",
      },
    ],
    name: "caseMakeClosed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "game",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "ruleId",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.RuleRef[]",
        name: "rules",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "role",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.InputRoleToken[]",
        name: "assignRoles",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "entRole",
            type: "string",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.PostInput[]",
        name: "posts",
        type: "tuple[]",
      },
    ],
    name: "caseMakeOpen",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRepoAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hub",
    outputs: [
      {
        internalType: "contract IHub",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type CourtExtConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CourtExtConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CourtExt__factory extends ContractFactory {
  constructor(...args: CourtExtConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CourtExt> {
    return super.deploy(overrides || {}) as Promise<CourtExt>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CourtExt {
    return super.attach(address) as CourtExt;
  }
  override connect(signer: Signer): CourtExt__factory {
    return super.connect(signer) as CourtExt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CourtExtInterface {
    return new utils.Interface(_abi) as CourtExtInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CourtExt {
    return new Contract(address, _abi, signerOrProvider) as CourtExt;
  }
}
