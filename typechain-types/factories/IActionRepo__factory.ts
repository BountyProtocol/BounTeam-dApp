/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IActionRepo, IActionRepoInterface } from "../IActionRepo";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "verb",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "object",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tool",
        type: "string",
      },
    ],
    name: "ActionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "ActionURI",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "subject",
            type: "string",
          },
          {
            internalType: "string",
            name: "verb",
            type: "string",
          },
          {
            internalType: "string",
            name: "object",
            type: "string",
          },
          {
            internalType: "string",
            name: "tool",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.SVO",
        name: "svo",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "actionAdd",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "subject",
            type: "string",
          },
          {
            internalType: "string",
            name: "verb",
            type: "string",
          },
          {
            internalType: "string",
            name: "object",
            type: "string",
          },
          {
            internalType: "string",
            name: "tool",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.SVO[]",
        name: "svos",
        type: "tuple[]",
      },
      {
        internalType: "string[]",
        name: "uris",
        type: "string[]",
      },
    ],
    name: "actionAddBatch",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "guid",
        type: "bytes32",
      },
    ],
    name: "actionGet",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "subject",
            type: "string",
          },
          {
            internalType: "string",
            name: "verb",
            type: "string",
          },
          {
            internalType: "string",
            name: "object",
            type: "string",
          },
          {
            internalType: "string",
            name: "tool",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.SVO",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "guid",
        type: "bytes32",
      },
    ],
    name: "actionGetStr",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "guid",
        type: "bytes32",
      },
    ],
    name: "actionGetURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "subject",
            type: "string",
          },
          {
            internalType: "string",
            name: "verb",
            type: "string",
          },
          {
            internalType: "string",
            name: "object",
            type: "string",
          },
          {
            internalType: "string",
            name: "tool",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.SVO",
        name: "svo",
        type: "tuple",
      },
    ],
    name: "actionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "guid",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "actionSetURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IActionRepo__factory {
  static readonly abi = _abi;
  static createInterface(): IActionRepoInterface {
    return new utils.Interface(_abi) as IActionRepoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IActionRepo {
    return new Contract(address, _abi, signerOrProvider) as IActionRepo;
  }
}
