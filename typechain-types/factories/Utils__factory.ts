/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Utils, UtilsInterface } from "../Utils";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "input_",
        type: "bytes32",
      },
    ],
    name: "bytes32ToString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "stringToBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6102b261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80639201de5514610045578063cfb519281461006e575b600080fd5b610058610053366004610140565b61008f565b604051610065919061024c565b60405180910390f35b61008161007c366004610158565b6100ba565b604051908152602001610065565b6060816040516020016100a491815260200190565b6040516020818303038152906040529050919050565b60006020825111156101125760405162461bcd60e51b815260206004820181905260248201527f537472696e6720697320746f6f206c6f6e672e204d6178203332206368617273604482015260640160405180910390fd5b81604051602001610123919061024c565b604051602081830303815290604052805190602001209050919050565b600060208284031215610151578081fd5b5035919050565b600060208284031215610169578081fd5b81356001600160401b038082111561017f578283fd5b818401915084601f830112610192578283fd5b8135818111156101a4576101a4610266565b604051601f8201601f19908116603f011681019083821181831017156101cc576101cc610266565b816040528281528760208487010111156101e4578586fd5b826020860160208301379182016020019490945295945050505050565b60008151808452815b818110156102265760208185018101518683018201520161020a565b818111156102375782602083870101525b50601f01601f19169290920160200192915050565b60208152600061025f6020830184610201565b9392505050565b634e487b7160e01b600052604160045260246000fdfea264697066735822122018b6a2f75930378e65cd39b3b51835abc2ab178b8d4d8e21cd82abbfe1c7c17d64736f6c63430008040033";

type UtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Utils__factory extends ContractFactory {
  constructor(...args: UtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Utils";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Utils> {
    return super.deploy(overrides || {}) as Promise<Utils>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Utils {
    return super.attach(address) as Utils;
  }
  connect(signer: Signer): Utils__factory {
    return super.connect(signer) as Utils__factory;
  }
  static readonly contractName: "Utils";
  public readonly contractName: "Utils";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UtilsInterface {
    return new utils.Interface(_abi) as UtilsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Utils {
    return new Contract(address, _abi, signerOrProvider) as Utils;
  }
}
