/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RuleRepo, RuleRepoInterface } from "../RuleRepo";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "claimId",
        type: "bytes32",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ruling",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "evidence",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "witness",
        type: "uint256",
      },
    ],
    name: "Confirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "about",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "affected",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "negation",
        type: "bool",
      },
    ],
    name: "Rule",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "disabled",
        type: "bool",
      },
    ],
    name: "RuleDisabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "value",
        type: "int256",
      },
    ],
    name: "RuleEffect",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "RuleRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "confirmationGet",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "ruling",
            type: "string",
          },
          {
            internalType: "bool",
            name: "evidence",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "witness",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.Confirmation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "effectsGet",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "domain",
            type: "string",
          },
          {
            internalType: "int256",
            name: "value",
            type: "int256",
          },
          {
            internalType: "bool",
            name: "disabled",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.RepChange[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "effectsGetOf",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "domain",
            type: "string",
          },
          {
            internalType: "int256",
            name: "value",
            type: "int256",
          },
          {
            internalType: "bool",
            name: "disabled",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.RepChange[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRepoAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "about",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "affected",
            type: "string",
          },
          {
            internalType: "bool",
            name: "negation",
            type: "bool",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bool",
            name: "disabled",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.Rule",
        name: "rule",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "ruling",
            type: "string",
          },
          {
            internalType: "bool",
            name: "evidence",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "witness",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.Confirmation",
        name: "confirmation",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "domain",
            type: "string",
          },
          {
            internalType: "int256",
            name: "value",
            type: "int256",
          },
          {
            internalType: "bool",
            name: "disabled",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.RepChange[]",
        name: "effects",
        type: "tuple[]",
      },
    ],
    name: "ruleAdd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "ruling",
            type: "string",
          },
          {
            internalType: "bool",
            name: "evidence",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "witness",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.Confirmation",
        name: "confirmation",
        type: "tuple",
      },
    ],
    name: "ruleConfirmationUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "disabled",
        type: "bool",
      },
    ],
    name: "ruleDisable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ruleGet",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "about",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "affected",
            type: "string",
          },
          {
            internalType: "bool",
            name: "negation",
            type: "bool",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bool",
            name: "disabled",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.Rule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "about",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "affected",
            type: "string",
          },
          {
            internalType: "bool",
            name: "negation",
            type: "bool",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bool",
            name: "disabled",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.Rule",
        name: "rule",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "domain",
            type: "string",
          },
          {
            internalType: "int256",
            name: "value",
            type: "int256",
          },
          {
            internalType: "bool",
            name: "disabled",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.RepChange[]",
        name: "effects",
        type: "tuple[]",
      },
    ],
    name: "ruleUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506114d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c806339088b46146100885780633dda390c1461009d5780636e58f657146100c357806371761422146100e357806382f5a541146101035780638f936ce914610116578063980b6fd2146101295780639e92fd8e1461013c578063a93b5fa71461015c575b600080fd5b61009b61009636600461112a565b61017c565b005b6100b06100ab366004610f4f565b61018c565b6040519081526020015b60405180910390f35b6100d66100d13660046110a3565b6102e9565b6040516100ba91906112d9565b6100f66100f1366004610f24565b61048e565b6040516100ba9190611193565b6100f66101113660046110a3565b6105bd565b61009b6101243660046110e6565b6105cf565b61009b6101373660046110bb565b6105dd565b6101446105e7565b6040516001600160a01b0390911681526020016100ba565b61016f61016a3660046110a3565b61065f565b6040516100ba919061129b565b61018783838361075b565b505050565b600080610197610789565b6001600160a01b031663e2b49cb96101ad610793565b604080516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152600660448201526530b1ba34b7b760d11b606482015260840160206040518083038186803b15801561020857600080fd5b505afa15801561021c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102409190610f08565b85516040516333f138f960e21b81529192506001600160a01b0383169163cfc4e3e4916102739160040190815260200190565b60006040518083038186803b15801561028b57600080fd5b505afa15801561029f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102c79190810190610fd2565b5060006102d486856107ce565b90506102e081866107ea565b95945050505050565b6040805160a0810182526000808252606060208301819052928201819052828201929092526080810191909152336000908152600160208181526040808420868552825292839020835160a08101909452805484529182018054918401916103509061140e565b80601f016020809104026020016040519081016040528092919081815260200182805461037c9061140e565b80156103c95780601f1061039e576101008083540402835291602001916103c9565b820191906000526020600020905b8154815290600101906020018083116103ac57829003601f168201915b5050509183525050600282015460ff16151560208201526003820180546040909201916103f59061140e565b80601f01602080910402602001604051908101604052809291908181526020018280546104219061140e565b801561046e5780601f106104435761010080835404028352916020019161046e565b820191906000526020600020905b81548152906001019060200180831161045157829003601f168201915b50505091835250506004919091015460ff16151560209091015292915050565b6001600160a01b03821660009081526003602090815260408083208484528252808320805482518185028101850190935280835260609492939192909184015b828210156105b157838290600052602060002090600302016040518060600160405290816000820180546105019061140e565b80601f016020809104026020016040519081016040528092919081815260200182805461052d9061140e565b801561057a5780601f1061054f5761010080835404028352916020019161057a565b820191906000526020600020905b81548152906001019060200180831161055d57829003601f168201915b505050918352505060018281015460208084019190915260029093015460ff161515604090920191909152918352920191016104ce565b50505050905092915050565b60606105c9338361048e565b92915050565b6105d982826107ea565b5050565b6105d9828261088c565b6000336001600160a01b0316639e92fd8e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561062257600080fd5b505afa158015610636573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065a9190610f08565b905090565b610685604051806060016040528060608152602001600015158152602001600081525090565b336000908152600260209081526040808320858452909152908190208151606081019092528054829082906106b99061140e565b80601f01602080910402602001604051908101604052809291908181526020018280546106e59061140e565b80156107325780601f1061070757610100808354040283529160200191610732565b820191906000526020600020905b81548152906001019060200180831161071557829003601f168201915b5050509183525050600182015460ff161515602082015260029091015460409091015292915050565b336000908152600360209081526040808320868452909152812061077e91610b1b565b6101878383836108f1565b600061065a6105e7565b6000336001600160a01b0316632db9a5126040518163ffffffff1660e01b815260040160206040518083038186803b15801561062257600080fd5b600080546001018082556107e38185856108f1565b9392505050565b3360009081526002602090815260408083208584528252909120825180518493610818928492910190610b3f565b5060208281015160018301805460ff1916911515919091179055604092830151600290920191909155825190830151838301519251859333937f0335a3d40146936aa784ecdf6a0c6e4a30b0d750c56a973f2d20fa983f5c7a3a936108809391929091611254565b60405180910390a35050565b336000818152600160209081526040808320868452825291829020600401805460ff19168515159081179091558251868152918201527f7d616999d7e4b5dcf71be58f9a681eee50b91d1e25c131b9fc119522f79d560b910160405180910390a25050565b3360009081526001602081815260408084208785528252909220845181558285015180518694929361092893908501920190610b3f565b50604082015160028201805460ff19169115159190911790556060820151805161095c916003840191602090910190610b3f565b50608091909101516004909101805460ff19169115159190911790558151602083015160608401516040808601519051879433947fdc2672f5848363090a869c1d72b719d7836da8d0d6f563c201fe3c33e1df9d4c946109c194929391929091611215565b60405180910390a360005b8151811015610b155733600090815260036020908152604080832087845290915290208251839083908110610a1157634e487b7160e01b600052603260045260246000fd5b602090810291909101810151825460018101845560009384529282902081518051929460030290910192610a4a92849290910190610b3f565b50602082015160018201556040909101516002909101805460ff19169115159190911790558151849033907f8fe4c669a7f74593e79f768df9dd03b9fc8227a47c557bcb649e55b7c0ed779790859085908110610ab757634e487b7160e01b600052603260045260246000fd5b602002602001015160000151858581518110610ae357634e487b7160e01b600052603260045260246000fd5b602002602001015160200151604051610afd929190611279565b60405180910390a3610b0e81611449565b90506109cc565b50505050565b5080546000825560030290600052602060002090810190610b3c9190610bc3565b50565b828054610b4b9061140e565b90600052602060002090601f016020900481019282610b6d5760008555610bb3565b82601f10610b8657805160ff1916838001178555610bb3565b82800160010185558215610bb3579182015b82811115610bb3578251825591602001919060010190610b98565b50610bbf929150610bf3565b5090565b80821115610bbf576000610bd78282610c08565b506000600182015560028101805460ff19169055600301610bc3565b5b80821115610bbf5760008155600101610bf4565b508054610c149061140e565b6000825580601f10610c24575050565b601f016020900490600052602060002090810190610b3c9190610bf3565b600082601f830112610c52578081fd5b813560206001600160401b0380831115610c6e57610c6e611470565b8260051b610c7d83820161138b565b8481528381019087850183890186018a1015610c97578788fd5b8793505b86841015610cd457803585811115610cb1578889fd5b610cbf8b88838d0101610df3565b84525060019390930192918501918501610c9b565b5098975050505050505050565b80358015158114610cf157600080fd5b919050565b600082601f830112610d06578081fd5b8135610d19610d14826113bb565b61138b565b818152846020838601011115610d2d578283fd5b816020850160208301379081016020019190915292915050565b600082601f830112610d57578081fd5b8151610d65610d14826113bb565b818152846020838601011115610d79578283fd5b610d8a8260208301602087016113e2565b949350505050565b600060608284031215610da3578081fd5b610dab611341565b905081356001600160401b03811115610dc357600080fd5b610dcf84828501610cf6565b825250610dde60208301610ce1565b60208201526040820135604082015292915050565b600060608284031215610e04578081fd5b610e0c611341565b905081356001600160401b03811115610e2457600080fd5b610e3084828501610cf6565b82525060208201356020820152610e4960408301610ce1565b604082015292915050565b600060a08284031215610e65578081fd5b60405160a081016001600160401b038082118383101715610e8857610e88611470565b81604052829350843583526020850135915080821115610ea757600080fd5b610eb386838701610cf6565b6020840152610ec460408601610ce1565b60408401526060850135915080821115610edd57600080fd5b50610eea85828601610cf6565b606083015250610efc60808401610ce1565b60808201525092915050565b600060208284031215610f19578081fd5b81516107e381611486565b60008060408385031215610f36578081fd5b8235610f4181611486565b946020939093013593505050565b600080600060608486031215610f63578081fd5b83356001600160401b0380821115610f79578283fd5b610f8587838801610e54565b94506020860135915080821115610f9a578283fd5b610fa687838801610d92565b93506040860135915080821115610fbb578283fd5b50610fc886828701610c42565b9150509250925092565b600060208284031215610fe3578081fd5b81516001600160401b0380821115610ff9578283fd5b908301906080828603121561100c578283fd5b611014611369565b825182811115611022578485fd5b61102e87828601610d47565b825250602083015182811115611042578485fd5b61104e87828601610d47565b602083015250604083015182811115611065578485fd5b61107187828601610d47565b604083015250606083015182811115611088578485fd5b61109487828601610d47565b60608301525095945050505050565b6000602082840312156110b4578081fd5b5035919050565b600080604083850312156110cd578182fd5b823591506110dd60208401610ce1565b90509250929050565b600080604083850312156110f8578182fd5b8235915060208301356001600160401b03811115611114578182fd5b61112085828601610d92565b9150509250929050565b60008060006060848603121561113e578081fd5b8335925060208401356001600160401b038082111561115b578283fd5b610fa687838801610e54565b6000815180845261117f8160208601602086016113e2565b601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561120757603f198984030185528151606081518186526111df82870182611167565b838b0151878c01529289015115159589019590955250948701949250908601906001016111b9565b509098975050505050505050565b84815260806020820152600061122e6080830186611167565b82810360408401526112408186611167565b915050821515606083015295945050505050565b6060815260006112676060830186611167565b93151560208301525060400152919050565b60408152600061128c6040830185611167565b90508260208301529392505050565b6020815260008251606060208401526112b76080840182611167565b9050602084015115156040840152604084015160608401528091505092915050565b60208152815160208201526000602083015160a060408401526112ff60c0840182611167565b90506040840151151560608401526060840151601f198483030160808501526113288282611167565b9150506080840151151560a08401528091505092915050565b604051606081016001600160401b038111828210171561136357611363611470565b60405290565b604051608081016001600160401b038111828210171561136357611363611470565b604051601f8201601f191681016001600160401b03811182821017156113b3576113b3611470565b604052919050565b60006001600160401b038211156113d4576113d4611470565b50601f01601f191660200190565b60005b838110156113fd5781810151838201526020016113e5565b83811115610b155750506000910152565b600181811c9082168061142257607f821691505b6020821081141561144357634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561146957634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610b3c57600080fdfea26469706673582212200dc957f604aa7174804e97fbd185617934375cc65d52d1c96638efe5e72864dc64736f6c63430008040033";

type RuleRepoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RuleRepoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RuleRepo__factory extends ContractFactory {
  constructor(...args: RuleRepoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RuleRepo";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RuleRepo> {
    return super.deploy(overrides || {}) as Promise<RuleRepo>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RuleRepo {
    return super.attach(address) as RuleRepo;
  }
  connect(signer: Signer): RuleRepo__factory {
    return super.connect(signer) as RuleRepo__factory;
  }
  static readonly contractName: "RuleRepo";
  public readonly contractName: "RuleRepo";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RuleRepoInterface {
    return new utils.Interface(_abi) as RuleRepoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RuleRepo {
    return new Contract(address, _abi, signerOrProvider) as RuleRepo;
  }
}
